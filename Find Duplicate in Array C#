 /*
     * Find Duplicate in Array
     * Given a read only array of n + 1 integers between 1 and n, find one number that 
     * repeats in linear time using less than O(n) space and traversing the stream sequentially O(1) times.

Sample Input:

[3 4 1 4 1]
Sample Output:

1
If there are multiple possible answers ( like in the sample case above ), output any one.

If there is no duplicate, output -1
     */
    class Duplicate_array_o_n__sol
    {
        public int repeatedNumber(List<int> A)
        {
            int repeat=0;
            for (int i = 0; i < A.Count;i++ )
            {
                int val= Math.Abs(A[i]);
                if(A[val-1] > 0)
                {
                    A[val - 1] = -A[val - 1];
                }
                else
                {
                    repeat = val;
                    break;
                }
            }
            if(repeat==0 && A.Count>1)
            {
                return repeat = -1;
            }
            if(A.Count==1)
            {
                return A[0];
            }
                return repeat;
        }
    }
}
