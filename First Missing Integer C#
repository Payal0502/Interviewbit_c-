    /*
     * First Missing Integer
     * Given an unsorted integer array, find the first missing positive integer.

    Example:

    Given [1,2,0] return 3,

    [3,4,-1,1] return 2,

    [-8, -7, -6] returns 1

    Your algorithm should run in O(n) time and use constant space.
     */
    class First_Missing_integer
    {
        public int firstMissingPositive(List<int> A)
        {
            int result = 0;
            int m = A.Max();
            if(m < 1)
            {
                return 1;
            }
            if(A.Count==1)
            {
                if (A[0] == 1)
                {
                    return result=  2;
                }
                else
                {
                    return result= 1;
                }
            }
            int i;
            int[] l = new int[m];
            for (i = 0; i < A.Count;i++ )
            {
                if(A[i] > 0)
                {
                  if(l[A[i] - 1 ]!= 1)
                   {
                     l[A[i] - 1] = 1;
                   }
                }
            }
            for (i = 0; i < l.Length; i++)
            {
                if (l[i] == 0)
                {
                    return result = i + 1;
                }
              
            }

            return result = i + 1;
        }
    }
}
