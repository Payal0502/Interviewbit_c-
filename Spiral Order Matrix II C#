 /*
     * Given an integer A, generate a square matrix filled with elements from 1 to A2 in spiral order.
Input Format:

The first and the only argument contains an integer, A.
Output Format:

Return a 2-d matrix of size A x A satisfying the spiral order.
Constraints:

1 <= A <= 1000
Examples:

Input 1:
    A = 3

Output 1:
    [   [ 1, 2, 3 ],
        [ 8, 9, 4 ],
        [ 7, 6, 5 ]   ]

Input 2:
    4
Output 2:
    [   [1, 2, 3, 4],
        [12, 13, 14, 5],
        [11, 16, 15, 6],
        [10, 9, 8, 7]   ]
     Spiral Order Matrix II  
   
     */
    class spiral_matrix
    {
        public List<List<int>> generateMatrix(int A)
        {
            List<List<int>> result = new List<List<int>>();
            int c1 = 0; int c2 = A - 1;
            int value = 1;
            int[,] a = new int[A, A];
            while(value <= A*A)
            {
                for(int i=c1; i<=c2; i++)
                {
                    a[c1, i] = value++;
                }
                for (int j = c1 + 1; j <= c2; j++)
                {
                    a[j, c2] = value++;
                }
                for (int i = c2 - 1; i >= c1; i-- )
                {
                    a[c2, i] = value++;
                }
                for(int j = c2-1;j >= c1+1; j--)
                {
                    a[j,c1] = value++;
                }
                c1++; c2--;
            }
            for (int i = 0; i < A;i++ )
            {
                List<int> rows = new List<int>();
                for(int j=0; j < A; j++)
                {
                    rows.Add(a[i,j]);
                }
               
                result.Add(rows);
            }
         return result;
        }
    }
}
