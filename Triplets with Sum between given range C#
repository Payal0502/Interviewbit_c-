  /*
     Triplets with Sum between given range
     Given an array of real numbers greater than zero in form of strings.
Find if there exists a triplet (a,b,c) such that 1 < a+b+c < 2 .
Return 1 for true or 0 for false.

Example:

Given [0.6, 0.7, 0.8, 1.2, 0.4] ,

You should return 1

as

0.6+0.7+0.4=1.7

1<1.7<2

Hence, the output is 1.

O(n) solution is expected.

Note: You can assume the numbers in strings donâ€™t overflow the primitive
data type and there are no leading zeroes in numbers. Extra memory usage is allowed.
     */
    class Triplets_with_Sum_between_given_range
    {
        public int solve(List<string> A)
        {
            List<float> AD = A.ConvertAll(float.Parse);
            List<float> currentlist = new List<float>();
            float sum = 0;
            if(A.Count >=3 )
            {
                currentlist.Add(AD[0]);
                currentlist.Add(AD[1]);
                currentlist.Add(AD[2]);
                sum = AD[0] + AD[1] + AD[2];
                if(sum > 1 && sum <2)
                {
                    return 1;
                }
             for (int i = 3; i < A.Count; i++)
              {
                 sum = currentlist[0] + currentlist[1] + currentlist[2];
                 if (sum > 1 && sum < 2)
                    {
                        return 1;
                    }
                    else
                    {
                        currentlist.Sort();
                        if(sum < 1)
                        {
                            currentlist[0] = AD[i];
                        }
                        else
                        {
                            currentlist[2] = AD[i];
                        }
                    }
               }
             sum = 0;
             for (int i = 0; i <currentlist.Count; i++)
             {
                 sum = sum + currentlist[i];
              
             }
             if (sum > 1 && sum < 2)
             {
                 return 1;
             }
            
            }
        
            return 0;
        }
    }
}
